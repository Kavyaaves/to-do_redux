{"version":3,"sources":["redux/reducer.js","components/Todo.js","components/ShowTodos.js","components/Todos.js","App.js","redux/store.js","index.js"],"names":["addTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer","TodoItem","props","updateTodo","removeTodo","completeTodo","inputRef","useRef","className","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","onClick","focus","style","color","class","connect","todos","dispatch","addTodo","obj","useState","sort","setSort","length","Todo","setTodo","console","log","type","onChange","target","alert","Math","floor","random","App","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1d9071e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = [];\r\n\r\nconst addTodoReducer = createSlice({\r\n\tname: 'todos',\r\n\tinitialState,\r\n\treducers: {\r\n\t\t//Add todos\r\n\t\taddTodos: (state, action) => {\r\n\t\t\tstate.push(action.payload);\r\n\t\t\treturn state;\r\n\t\t},\r\n\t\t//remove todos\r\n\t\tremoveTodos: (state, action) => {\r\n\t\t\treturn state.filter((item) => item.id !== action.payload);\r\n\t\t},\r\n\t\t//update todos\r\n\t\tupdateTodos: (state, action) => {\r\n\t\t\treturn state.map((todo) => {\r\n\t\t\t\tif (todo.id === action.payload.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...todo,\r\n\t\t\t\t\t\titem: action.payload.item,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn todo;\r\n\t\t\t});\r\n\t\t},\r\n\t\t//completed\r\n\t\tcompleteTodos: (state, action) => {\r\n\t\t\treturn state.map((todo) => {\r\n\t\t\t\tif (todo.id === action.payload) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...todo,\r\n\t\t\t\t\t\tcompleted: true,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn todo;\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addTodos, removeTodos, updateTodos, completeTodos } =\r\n\taddTodoReducer.actions;\r\nexport const reducer = addTodoReducer.reducer;\r\n","import React, { useRef } from 'react';\r\nimport { AiFillEdit } from 'react-icons/ai';\r\nimport { IoCheckmarkDoneSharp, IoClose } from 'react-icons/io5';\r\n\r\nconst TodoItem = (props) => {\r\n\tconst { item, updateTodo, removeTodo, completeTodo } = props;\r\n\r\n\tconst inputRef = useRef(true);\r\n\r\n\tconst changeFocus = () => {\r\n\t\tinputRef.current.disabled = false;\r\n\t\tinputRef.current.focus();\r\n\t};\r\n\r\n\tconst update = (id, value, e) => {\r\n\t\tif (e.which === 13) {\r\n\t\t\tupdateTodo({ id, item: value });\r\n\t\t\tinputRef.current.disabled = true;\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<li key={item.id} className='card'>\r\n\t\t\t<textarea\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tdisabled={inputRef}\r\n\t\t\t\tdefaultValue={item.item}\r\n\t\t\t\tonKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n\t\t\t/>\r\n\t\t\t<div className='btns'>\r\n\t\t\t\t<button onClick={() => changeFocus()}>\r\n\t\t\t\t\t<AiFillEdit />\r\n\t\t\t\t</button>\r\n\t\t\t\t{item.completed === false && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={{ color: 'green' }}\r\n\t\t\t\t\t\tonClick={() => completeTodo(item.id)}>\r\n\t\t\t\t\t\t<IoCheckmarkDoneSharp />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t<i class='fas fa-edit'></i>\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{ color: 'red' }}\r\n\t\t\t\t\tonClick={() => removeTodo(item.id)}>\r\n\t\t\t\t\t<IoClose />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\taddTodos,\r\n\tcompleteTodos,\r\n\tremoveTodos,\r\n\tupdateTodos,\r\n} from '../redux/reducer';\r\nimport Todo from './Todo';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttodos: state,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTodo: (obj) => dispatch(addTodos(obj)),\r\n\t\tremoveTodo: (id) => dispatch(removeTodos(id)),\r\n\t\tupdateTodo: (obj) => dispatch(updateTodos(obj)),\r\n\t\tcompleteTodo: (id) => dispatch(completeTodos(id)),\r\n\t};\r\n};\r\n\r\nconst ShowTodos = (props) => {\r\n\tconst [sort, setSort] = useState('active');\r\n\treturn (\r\n\t\t<div className='displaytodos'>\r\n\t\t\t<div className='buttons'>\r\n\t\t\t\t<button onClick={() => setSort('active')}>Pending</button>\r\n\r\n\t\t\t\t<button onClick={() => setSort('completed')}>Completed</button>\r\n\r\n\t\t\t\t<button onClick={() => setSort('all')}>All</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t{props.todos.length > 0 && sort === 'active'\r\n\t\t\t\t\t? props.todos.map((item) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\titem.completed === false && (\r\n\t\t\t\t\t\t\t\t\t<Todo\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\tremoveTodo={props.removeTodo}\r\n\t\t\t\t\t\t\t\t\t\tupdateTodo={props.updateTodo}\r\n\t\t\t\t\t\t\t\t\t\tcompleteTodo={props.completeTodo}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t: null}\r\n\t\t\t\t{props.todos.length > 0 && sort === 'completed'\r\n\t\t\t\t\t? props.todos.map((item) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\titem.completed === true && (\r\n\t\t\t\t\t\t\t\t\t<Todo\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\tremoveTodo={props.removeTodo}\r\n\t\t\t\t\t\t\t\t\t\tupdateTodo={props.updateTodo}\r\n\t\t\t\t\t\t\t\t\t\tcompleteTodo={props.completeTodo}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t: null}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTodos);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodos } from '../redux/reducer';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttodos: state,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTodo: (obj) => dispatch(addTodos(obj)),\r\n\t};\r\n};\r\n\r\nconst Todos = (props) => {\r\n\tconst [todo, setTodo] = useState('');\r\n\tconsole.log(props);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetTodo(e.target.value);\r\n\t};\r\n\r\n\tconst add = () => {\r\n\t\tif (todo === '') {\r\n\t\t\talert('Input is Empty');\r\n\t\t} else {\r\n\t\t\tprops.addTodo({\r\n\t\t\t\tid: Math.floor(Math.random() * 1000),\r\n\t\t\t\titem: todo,\r\n\t\t\t\tcompleted: false,\r\n\t\t\t});\r\n\t\t\tsetTodo('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='addTodos'>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tclassName='todo-input'\r\n\t\t\t\tvalue={todo}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t<button className='add-btn' onClick={add}>\r\n\t\t\t\t+\r\n\t\t\t</button>\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import './css/main.css';\r\nimport ShowTodos from './components/ShowTodos';\r\nimport Todos from './components/Todos';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<h1 className='title'>TODOS STORE</h1>\r\n\t\t\t<div>\r\n\t\t\t\t<Todos />\r\n\t\t\t\t<ShowTodos />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { reducer } from './reducer';\r\n\r\nconst store = configureStore({\r\n\treducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}